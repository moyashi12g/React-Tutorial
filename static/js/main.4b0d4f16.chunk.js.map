{"version":3,"sources":["Table.js","ContactForm.js","Form.js","Post.js","App.js","index.js"],"names":["TableHeader","map","ToDo","i","key","className","TableBody","props","console","log","characterData","removeCharacter","rows","chara","del","name","job","onClick","Table","this","Component","ContactForm","state","isSubmitted","email","hasEmailError","content","hasContentError","event","inputValue","target","value","isEmpty","setState","emailErrorText","contentErrorText","contactForm","onSubmit","handleSubmit","onChange","handleEmailChange","handleContentChange","type","React","Form","handleChange","submitForm","initialState","onFormSubmit","preventDefault","Post","isModalOpen","modal","src","image","width","height","introduction","handleClickClose","handleClickLesson","characters","PostList","App","character","PostItem","index","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b0d4f16.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nconst TableHeader = () => {\n  const wantToDo = [\"Reactでできること一覧\",\"Flex-boxまとめ\",\"--------------\"];\n  const listWantToDo = wantToDo.map((ToDo,i) =>\n    <li key = {i}>{ToDo}</li>\n  );\n    return(\n        <thead>\n          <tr className=\"tmp\">\n            <th> Bucket List</th>\n            {/* <td className ='ToDoList'>{listWantToDo}</td> */}\n\n            <td >何を  　　いつまでに</td>\n            {/* <td className=\"tmp\"></td> */}\n          </tr>\n        </thead>\n    )\n}\n\nconst TableBody = props => {\n    console.log(props)\n    const {characterData,removeCharacter}=props;\n    const rows = characterData.map((chara,i) => {\n        return (\n        <tr key={i} >\n          { chara.del ? <td><del>{chara.name}</del></td> : <td>{chara.name}</td> }\n          <td>{chara.job}</td>\n          <td>\n            <button \n            onClick = {() => {\n              // console.log(chara)\n              removeCharacter(i);\n            }}\n            >\n              Complete</button>\n\n\n              <button \n            onClick = {() => {\n              // console.log(chara)\n              removeCharacter(i);\n            }}\n            >\n              Delete</button>\n            </td>\n        </tr>\n        )\n    })\n    return(\n        <tbody>\n        {rows}\n        </tbody>\n    )\n}\n\n\n\nclass Table extends Component {\n  render() {\n    const {characterData,removeCharacter} = this.props;\n    return (\n      <table className = 'table-setting' >\n        <TableHeader />\n        <TableBody \n        characterData = {characterData} \n        removeCharacter = {removeCharacter}\n        />\n\n      </table>\n    );\n  }\n}\n\nexport default Table","import React from 'react';\n\nclass ContactForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSubmitted: false,\n      email: '',\n      hasEmailError: false,\n      content:'',\n      hasContentError:false\n      \n    };\n  }\n  \n\n  handleEmailChange(event) {\n    const inputValue = event.target.value;\n    const isEmpty = inputValue === '';\n    this.setState({\n      email: inputValue,\n      hasEmailError: isEmpty,\n    });\n  }\n\n  handleContentChange(event){\n    const inputValue = event.target.value;\n    const isEmpty = inputValue ==='';\n    this.setState({\n      content:inputValue,\n      hasContentError:isEmpty\n    });\n  }\n\n  handleSubmit() {\n    this.setState({isSubmitted: true});\n  }\n\n  render() {\n    let emailErrorText;\n    if (this.state.hasEmailError) {\n      emailErrorText = (\n        <p className='contact-message-error'>\n          メールアドレスを入力してください\n        </p>\n      );\n    }\n    \n    let contentErrorText;\n    \n    if(this.state.hasContentError){\n      contentErrorText =(\n        <p className='contact-message-error'>\n          お問い合わせ内容を入力してください\n        </p>\n        )\n    }\n    \n    let contactForm;\n    if (this.state.isSubmitted) {\n      contactForm = (\n        // <div className='contact-submit-message'>\n        //   送信完了\n        // </div>\n        <form onSubmit={() => {this.handleSubmit()}} >\n        <p>メールアドレス（Name）</p>\n        <input\n          value={this.state.email}\n          onChange={(event) => {this.handleEmailChange(event)}}\n        />\n        {emailErrorText}\n        <p>お問い合わせ内容(Job）</p>\n        <textarea \n          value = {this.state.content}\n          onChange ={ (event) => {\n            this.handleContentChange(event)\n          }}\n        />\n        {contentErrorText}\n        \n        <input\n          type='submit'\n          value='送信'\n        />\n      </form>\n\n      );\n    } else {\n      contactForm = (\n        <form \n        className = 'form-setting'\n        onSubmit={() => {this.handleSubmit()}} >\n          <p>メールアドレス（必須）</p>\n          <input\n            value={this.state.email}\n            onChange={(event) => {this.handleEmailChange(event)}}\n          />\n          {emailErrorText}\n          <p>お問い合わせ内容（必須）</p>\n          <textarea \n            value = {this.state.content}\n            onChange ={ (event) => {\n              this.handleContentChange(event)\n            }}\n          />\n          {contentErrorText}\n          \n          <input\n            type='submit'\n            value='送信'\n\n          />\n        </form>\n      );\n    }\n    \n    return (\n      <div className='contact-form'>\n        {contactForm}\n      </div>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.initialState = props;\n    this.state = this.initialState;\n}\n\n    handleChange = event => {\n        const { name, value } = event.target\n      \n        this.setState({\n          [name]: value,\n        })\n      }\n\n\n    submitForm = () => {\n        this.props.handleSubmit(this.state)\n        this.setState(this.initialState)\n      }\n\n    onFormSubmit = (event) => {\n        event.preventDefault();\n        \n        this.props.handleSubmit(this.state);\n        this.setState(this.initialState);\n    }\n\n    \n   \n    render() {\n        const { name, job } = this.state;\n        return (\n\n\n          <form \n          className = 'add-form-setting'\n          onSubmit={this.onFormSubmit}>\n          <label>何を</label>\n          <input \n              type=\"text\" \n              name=\"name\" \n              value={name} \n              onChange={this.handleChange} />\n          <label>いつまでに</label>\n          <input \n              type=\"text\" \n              name=\"job\" \n              value={job} \n              onChange={this.handleChange} />\n          <button type=\"submit\">\n              追加\n          </button>\n      </form>\n        );\n    }\n\n\n        \n    \n\n  \n}\n\nexport default Form;\n","import React from  'react';\n\nclass Post extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {isModalOpen: false};\n    }\n  \n    handleClickLesson() {\n      this.setState({isModalOpen: true});\n    }\n\n    \n    // handleClickCloseメソッドを定義してください\n    handleClickClose() {\n      this.setState({isModalOpen: false});\n    }\n\n    render() {\n        let modal;\n        if (this.state.isModalOpen) {\n          modal = (\n            <div className='modal'>\n              <div className='modal-inner'>\n                <div className='modal-header'></div>\n                <div className='modal-introduction'>\n                  <h2>{this.props.name}</h2>\n                  <img src={this.props.image} width=\"200\" height=\"200\" />\n                  <p>{this.props.introduction}</p>\n                  {/* <tr>{this.props.show}</tr> */}\n                </div>\n                <button\n                  className='modal-close-btn'\n                  onClick = {() => {\n                    this.handleClickClose()\n                  }}\n    \n                >\n                  とじる\n                </button>\n              </div>\n            </div>\n          );\n        }\n\n        return (\n            <div className='post-card'>\n              <div\n                className='post-item'\n                onClick={() => {this.handleClickLesson()}}\n              >\n                <p>{this.props.name}</p>\n                <img src={this.props.image} width=\"200\" height=\"200\"  />\n              </div>\n              {modal}\n            </div>\n          );\n        }\n}\n    \n\n\n\nexport default Post;","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Table from './Table'\nimport ContactForm from './ContactForm';\nimport Form from './Form';\nimport Post from './Post';\n\n\nconst characters = [\n  {\n    name: 'スカイダイビング',\n    job: '29歳',\n    \n  },\n  {\n    name: 'ブログ製作',\n    job: '21歳',\n  },\n  {\n    name: '一人暮らし',\n    job: '22歳',\n  },\n  {\n    name: 'カジノ',\n    job: '23歳',\n  },\n  {\n    name: '釣り',\n    job: '20歳',\n  },\n]\n\nconst PostList = [\n  {\n  name: 'Table-Add-Delete',\n  image: './IMG_6805.JPEG',\n  introduction: '１つ目！',\n  // show :{ShowPosts}\n  },\n  {\n    name: 'Table-Add-Delete',\n    image: './IMGP0661.JPG',\n    introduction: '2つ目！',\n    // show:{ShowPosts}\n    },\n]\n\n\n\n\n\n\n// stateはclass-compornentでしか使えない\n// function App{\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state ={characters}; \n    // initialize state\n  };\n  render(){\n\n\n\n\n      \n\n\n    //   const ShowPosts = \n    //     PostList.map((PostItem,i) => {\n    //     return (\n    //       <Post\n    //         key = {i}\n    //         name={ PostItem.name }\n    //         image={ PostItem.image }\n    //         introduction={ PostItem.introduction }\n    //         show = {PostItem.show}\n    //       />\n    //     );\n    //   }) \n\n    return (\n      <div className=\"App\">\n        <Table \n        characterData={this.state.characters}\n        removeCharacter={i => this.removeCharacter(i)}\n        />\n\n        <p>--------</p>\n        <Form \n          characterData={this.state.characters}\n          handleSubmit={this.handleSubmit}\n          />\n\n\n        <p>--------</p>\n\n        <div className='Post-setting'> \n        { PostList.map((PostItem,i) => {\n              return (\n                <Post\n                  key = {i}\n                  name={ PostItem.name }\n                  image={ PostItem.image }\n                  introduction={ PostItem.introduction }\n                  // show = {PostItem.show}\n                />\n              );\n            }) }\n\n                  \n        </div>\n        <p>--------</p>\n        <ContactForm characterData={this.state.characters}/>\n\n        \n\n      </div>\n    );\n  }\n\n\n  handleSubmit = character => {\n    this.setState({ characters: [...this.state.characters, character] })\n  }\n\n\n  removeCharacter(index){\n    // const characters = this.state.characters.filter((_,i) => i !== index)\n    const characters = this.state.characters.map((c, i) => {\n      if (i === index) {\n        console.log(this.state.characters.del)\n        if (this.state.characters[index].del === true){\n          console.log('true');\n          return {...c, del: false };\n        }else{\n          console.log('else');\n        return {...c, del: true };\n        \n\n        }\n\n      }\n      return c;\n    \n    }\n    )\n    this.setState({characters});\n    // 引数で渡ってきたやつ以外のもので配列を作って，セット\n    // つまり，引数のものを削除\n  }\n\n\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// App componentをrootにrenderしている\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}