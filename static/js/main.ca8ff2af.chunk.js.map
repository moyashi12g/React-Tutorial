{"version":3,"sources":["Table.js","App.js","index.js"],"names":["TableHeader","TableBody","props","console","log","characterData","removeCharacter","rows","map","chara","i","key","name","job","onClick","Table","this","Component","characters","App","state","className","index","filter","_","setState","React","ReactDOM","render","document","getElementById"],"mappings":"8MAEMA,G,MAAc,WAChB,OACI,+BACE,4BACE,oCACA,uCAMNC,EAAY,SAAAC,GACdC,QAAQC,IAAIF,GADW,IAEhBG,EAA+BH,EAA/BG,cAAcC,EAAiBJ,EAAjBI,gBACfC,EAAOF,EAAcG,IAAI,SAACC,EAAMC,GAClC,OACA,wBAAIC,IAAKD,GACP,4BAAKD,EAAMG,MACX,4BAAKH,EAAMI,KACX,4BACE,4BACAC,QAAW,WAETR,EAAgBI,KAHlB,cAWR,OACI,+BACCH,IAsBMQ,E,iLAfH,IAAD,EACiCC,KAAKd,MAAtCG,EADA,EACAA,cAAcC,EADd,EACcA,gBACrB,OACE,+BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CACAD,cAAiBA,EACjBC,gBAAmBA,S,GARPW,aCnCdC,EAAa,CACjB,CACEN,KAAM,eACNC,IAAK,sBAEP,CACED,KAAM,qBACNC,IAAK,sBAEP,CACED,KAAM,2BACNC,IAAK,sBAEP,CACED,KAAM,2BACNC,IAAK,sBAEP,CACED,KAAM,2BACNC,IAAK,6BAkCMM,E,YA1Bb,WAAYjB,GAAO,IAAD,8BAChB,4CAAMA,KACDkB,MAAO,CAACF,cAFG,E,sEAKT,IAAD,OACN,OACE,yBAAKG,UAAU,OACb,kBAAC,EAAD,CACAhB,cAAeW,KAAKI,MAAMF,WAC1BZ,gBAAiB,SAAAgB,GAAK,OAAI,EAAKhB,gBAAgBgB,S,sCAQrCA,GACd,IAAMJ,EAAaF,KAAKI,MAAMF,WAAWK,OAAO,SAACC,EAAEd,GAAH,OAASA,IAAMY,IAC/DN,KAAKS,SAAS,CAACP,mB,GArBDQ,IAAMT,WC3BxBU,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.ca8ff2af.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nconst TableHeader = () => {\n    return(\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Job</th>\n          </tr>\n        </thead>\n    )\n}\n\nconst TableBody = props => {\n    console.log(props)\n    const {characterData,removeCharacter}=props;\n    const rows = characterData.map((chara,i) => {\n        return (\n        <tr key={i} >\n          <td>{chara.name}</td>\n          <td>{chara.job}</td>\n          <td>\n            <button \n            onClick = {() => {\n              // console.log(chara)\n              removeCharacter(i);\n            }}\n            >\n              Delete</button>\n            </td>\n        </tr>\n        )\n    })\n    return(\n        <tbody>\n        {rows}\n        </tbody>\n    )\n}\n\n\nclass Table extends Component {\n  render() {\n    const {characterData,removeCharacter} = this.props;\n    return (\n      <table>\n        <TableHeader />\n        <TableBody \n        characterData = {characterData} \n        removeCharacter = {removeCharacter}\n        />\n  \n      </table>\n    );\n  }\n}\n\nexport default Table","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Table from './Table'\n\n\nconst characters = [\n  {\n    name: 'ゴン',\n    job: '強化系',\n  },\n  {\n    name: 'キルア',\n    job: '変化形',\n  },\n  {\n    name: 'クラピカ',\n    job: '特質系',\n  },\n  {\n    name: 'レオリオ',\n    job: '放出系',\n  },\n  {\n    name: 'オオタニ',\n    job: '具現化系',\n  },\n]\n\n\n// stateはclass-compornentでしか使えない\n// function App{\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state ={characters}; \n    // initialize state\n  };\n  render(){\n    return (\n      <div className=\"App\">\n        <Table\n        characterData={this.state.characters}\n        removeCharacter={index => this.removeCharacter(index)}\n       \n        />\n      </div>\n    );\n  }\n\n\n  removeCharacter(index){\n    const characters = this.state.characters.filter((_,i) => i !== index)\n    this.setState({characters});\n    // 引数で渡ってきたやつ以外のもので配列を作って，セット\n    // つまり，引数のものを削除\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// App componentをrootにrenderしている\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}